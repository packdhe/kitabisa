{{ if contains "LoadBalancer" .Values.service.type }}
It may take a few minutes for the LoadBalancer IP to be available.
You can watch the status of the load balancer by running:

    kubectl get svc --watch {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}proxy
{{- else if contains "ClusterIP" .Values.service.type }}
It may take a few seconds for the proxy service to be available.
You can watch the status of the proxy pod by running:

    export POD_NAME=$(kubectl get pods {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}-l "service=proxy,release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    kubectl get {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}--watch pods $POD_NAME
{{- end }}

1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
    export NODE_PORT=$(kubectl get {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}-o jsonpath="{.spec.ports[0].nodePort}" services proxy)
    export NODE_IP=$(kubectl get nodes {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}-o jsonpath="{.items[0].status.addresses[0].address}")
    echo Application URL: https://$NODE_IP:$NODE_PORT/
{{- else if contains "LoadBalancer" .Values.service.type }}
    Google Cloud or Azure:
    export SERVICE_IP=$(kubectl get svc {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}proxy -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
    AWS:
    export SERVICE_IP=$(kubectl get svc {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}proxy -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
    echo https://$SERVICE_IP:{{ default 443 .Values.service.httpsPort }}/
{{- else if contains "ClusterIP" .Values.service.type }}
    echo Application URL: https://localhost:8443/
    kubectl port-forward {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}deployment/proxy 8443:https

   See `kubectl port-forward --help` for more details on what `kubectl port-forward` can do.
{{- end }}

2. Get the initial administrator user name and password by running these commands:

    echo Username: $(kubectl get {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}secrets -o jsonpath='{ .data.userName }' {{ template "smartcheck.fullname" . }}-auth | base64 --decode)
    echo Password: $(kubectl get {{ if not (eq "default" .Release.Namespace) }}--namespace {{ .Release.Namespace }} {{ end }}secrets -o jsonpath='{ .data.password }' {{ template "smartcheck.fullname" . }}-auth | base64 --decode)

3. (Optional) Replace the certificate that the service is using. See the
   instructions in the README.md file under "Advanced Topics" > "Replacing the
   service certificate" Use the following values in the kubectl commands:

    Release:   {{ .Release.Name }}
{{- if not .Values.certificate.secret.name }}
    Secret:    {{ template "smartcheck.fullname" . }}-tls-certificate
{{- else }}
    Secret:    {{ .Values.certificate.secret.name }}
{{- end }}
{{- if not (eq "default" .Release.Namespace) }}
    Namespace: {{ .Release.Namespace -}}
{{- end }}

{{ if not .Values.persistence.enabled -}}
###############################################################################
#####                                                                     #####
#####  WARNING: Persistence is disabled! You will lose your data if the   #####
#####  database pods are terminated.                                      #####
#####                                                                     #####
###############################################################################
{{- end -}}
